---
layout: essay
type: essay
title: "Athletic Coding with TypeScript: The Marathon Never Ends"
# All dates must be YYYY-MM-DD format!
date: 2024-09-04
published: true
labels:
  - ICS 314
---

## Athletic Coding with Typescript: The Marathon Never Ends

As an athlete in the sprint that is the world of software development, I’ve found one thing to be certain: Our best only comes when we are tested the most. High-pressure situations, where it's just you, the clock, and the playground that is your IDE, define our limits. As a second-year programmer approaching my junior year of college, I’ve had my fair share of stressful moments. From struggling with deadlines to typing as fast as humanly possible on LeetCode, you name it—I’ve done it (or at least tried). Although I do well in school and get by on LeetCode, staying consistent has always been a struggle. It was time for a change of scenery and a new methodology of learning, and I’m here to speak about both.

## Background and Learning TypeScript

My first experience with coding came in August 2022 when I decided to finally declare my major as Computer Science. My first love (or coding language) was and always will be Java. From System.out.println to object-oriented programming, I’d say Java is my preferred cup of tea (or coffee). But alas, all good things must come to an end, and my coding journey through UH Manoa brought me to the adventure that is TypeScript.

Adapting from Java to TypeScript was about as easy as it gets. In fact, I’d say it’s quite a bit more convenient to use than Java. From type casting to destructuring arrays to the strictly equals operators, TypeScript is a joy to code with. I especially enjoy how simple it is to construct an object in TypeScript and call upon the necessary variables, as opposed to relying on getter and setter methods in Java. Honestly, if Java weren’t my first language, I’m sure I would dislike it just as much as the next person. But through thick and thin, Java remains my favorite all the same.

## ASE: Athletic Software Engineering and Conclusion

While I’ve been delving into the wonders of TypeScript, I’ve also been practicing “Athletic Software Engineering.” This is the practice of coding elaborate programs in an intense, timed environment to increase coding efficiency and performance. This could be done alone or with a small team to encourage effective communication among fellow programmers, but whether you practice it alone or with friends, one thing is certain: You will improve.

I noticed that the more I implemented this ASE methodology into my programming, the better I became. This improvement was evident through practice coding exercises or WODs (Workouts of the Day). At the time of writing this essay, I’ve been doing these WODs for about a week or two, and if there’s one thing to love about them, it’s definitely how much they help me implement all that I’ve learned in my software engineering course.

Adopting the ASE methodology while learning TypeScript has aided me in learning a new coding language faster than ever before. Continuing to apply this approach will undoubtedly guide me toward my goal of becoming a successful software engineer. A quote I live by is, “Small, consistent steps in the right direction lead to great results. Be great today.” This quote inspires me to improve each and every day, and the ASE methodology does the same. Sometimes you don’t have the motivation to do as much as you did yesterday, and that’s okay. As long as you take a step or two every day, you will reach the finish line.

